name: ü§ñ Auto README Updater

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'README.md'  # skip workflow if only README changes

permissions:
  contents: write  # allow pushing changes

jobs:
  update-readme:
    runs-on: ubuntu-latest

    steps:
      # --- 1Ô∏è‚É£ Checkout repo ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 2Ô∏è‚É£ Setup Python ---
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # --- 3Ô∏è‚É£ Install dependencies ---
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "‚ö†Ô∏è No requirements.txt found, installing basic deps..."
            pip install fastapi uvicorn openai langchain langchain-openai
          fi

      # --- 4Ô∏è‚É£ Run README generator agent ---
      - name: Run README generator
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: gpt-4o-mini
          TOKEN_GITHUB: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python - <<'EOF'
          import os, json, subprocess
          from Readme_Updater_agent import generate_updated_readme  # match your filename exactly

          repo = os.getenv("GITHUB_REPOSITORY")
          head_sha = os.getenv("GITHUB_SHA")
          base_sha = subprocess.getoutput("git rev-parse HEAD~1")

          print(f"üîç Repo: {repo} | Base: {base_sha[:7]} | Head: {head_sha[:7]}")

          # ‚úÖ Same structure as Fastweb.py
          state = {
              "repo": repo,
              "branch": os.getenv("GITHUB_REF_NAME", "master"),
              "base_sha": base_sha,
              "head_sha": head_sha,
              "total_files_changed": 0,
              "files": [],
              "messages": []
          }

          print("ü§ñ Running generate_updated_readme...")
          result = generate_updated_readme(state)

          print("‚úÖ Agent finished. Summary:")
          print(json.dumps(result, indent=2))
          EOF

      # --- 5Ô∏è‚É£ Commit and push README update ---
      - name: Commit README update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Check if updated file exists
          if [ -f "data/UPDATED_README.md" ]; then
            git add data/UPDATED_README.md
          elif [ -f "README.md" ]; then
            git add README.md
          else
            echo "‚ö†Ô∏è No README file to update."
          fi

          git diff --quiet && echo "üü¢ No changes to commit" || git commit -m "ü§ñ Auto-update README"
          git push
